#!/usr/bin/env sh
#
# bootstrap checks if dependencies like `zsh` are installed and calls
# install on success
#
set -o errexit
set -o nounset
#set -o xtrace

# set `magic` variables for current file and dir
__dir="$(cd "$(dirname "$0")" && pwd)"
__file="${__dir}/$(basename "$0")"
__base="$(basename ${__file})"
__root="$(cd "$(dirname "${__dir}")" && pwd)"

install_zsh() {
  dist=$(uname -s)
  local uid=$(id -u)

  # toDo: 'Darwin' and 'arch' branch needs to be tested
  if [ "$dist" = "Darwin" ]; then
    [ -z $(command -v brew) ] && (echo "need to install homebrew:\n"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)")
    brew install zsh
  else
    if [ -f /etc/os-release ]; then
      local v=$(cat /etc/os-release | grep -i -e "^id=" | sed -r "s/^id=(.+)/\1/i")
      if [ "$v" = "debian" ] || [ "$v" = "ubuntu" ]; then
        cmd="apt-get -y install zsh"
        [ $uid -gt 0 ] && cmd="sudo $cmd"
        $cmd
      elif [ "$v" = "arch" ]; then
        cmd="pacman -S zsh"
        [ $uid -gt 0 ] && cmd="sudo $cmd"
        cmd
      else
        echo "linux variant not supported: $v" && exit 1
      fi
    else
      echo "not supported" && exit 1
    fi
  fi

  echo ""
  zsh=$(command -v zsh)
  echo "Setting 'zsh' as login shell, please enter your"
  echo "password when prompted"
  if [ $uid -eq 0 ]; then
    chsh -s "$zsh" $SUDO_USER || exit 1
  else
    chsh -s "$zsh" || exit 1
  fi
  echo ""
  echo "You need to logout and login again or reboot and call this script again:"
  echo "$__file"
  exit 0
}


echo ""
if [ "$(expr "$SHELL" : '.*/\(.*\)')" = "zsh" ]; then
  zsh "$__dir/install"
else
  echo "'zsh' is not your default shell, these dotfiles are build on zsh."
  read -p "Install 'zsh' and call \`chsh /usr/bin/zsh\` now [Y/n]" a
  [ "$a" = "" ] && a=y
  [ "$a" = "y" ] || [ "$a" = "Y" ] && install_zsh || exit 0
fi

